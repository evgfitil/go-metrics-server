// Code generated by MockGen. DO NOT EDIT.
// Source: internal/agentcore/collect.go
//
// Generated by this command:
//
//	mockgen -source=internal/agentcore/collect.go -destination=internal/mocks/metric_interface_mock.go -package=mocks MetricInterface
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMetricInterface is a mock of MetricInterface interface.
type MockMetricInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMetricInterfaceMockRecorder
}

// MockMetricInterfaceMockRecorder is the mock recorder for MockMetricInterface.
type MockMetricInterfaceMockRecorder struct {
	mock *MockMetricInterface
}

// NewMockMetricInterface creates a new mock instance.
func NewMockMetricInterface(ctrl *gomock.Controller) *MockMetricInterface {
	mock := &MockMetricInterface{ctrl: ctrl}
	mock.recorder = &MockMetricInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricInterface) EXPECT() *MockMetricInterfaceMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockMetricInterface) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockMetricInterfaceMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockMetricInterface)(nil).GetName))
}

// GetType mocks base method.
func (m *MockMetricInterface) GetType() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetType")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetType indicates an expected call of GetType.
func (mr *MockMetricInterfaceMockRecorder) GetType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetType", reflect.TypeOf((*MockMetricInterface)(nil).GetType))
}

// GetValueAsString mocks base method.
func (m *MockMetricInterface) GetValueAsString() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValueAsString")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetValueAsString indicates an expected call of GetValueAsString.
func (mr *MockMetricInterfaceMockRecorder) GetValueAsString() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValueAsString", reflect.TypeOf((*MockMetricInterface)(nil).GetValueAsString))
}
